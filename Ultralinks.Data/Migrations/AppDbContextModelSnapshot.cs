// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ultralinks.Data;

#nullable disable

namespace Ultralinks.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ultralinks.Domain.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cep");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("complemento");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ddd");

                    b.Property<string>("Gia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gia");

                    b.Property<string>("Ibge")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ibge");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("localidade");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<string>("Siafi")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("siafi");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("uf");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("Ultralinks.Domain.Models.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoAutorizacao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_autorizacao");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("integer")
                        .HasColumnName("tipo");

                    b.Property<int>("UsuarioIdDestino")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id_destino");

                    b.Property<int>("UsuarioIdOrigem")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id_origem");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioIdDestino");

                    b.HasIndex("UsuarioIdOrigem");

                    b.ToTable("transacao");
                });

            modelBuilder.Entity("Ultralinks.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cpf");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_completo");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Ultralinks.Domain.Models.Endereco", b =>
                {
                    b.HasOne("Ultralinks.Domain.Models.Usuario", "Usuario")
                        .WithOne("EnderecoCobranca")
                        .HasForeignKey("Ultralinks.Domain.Models.Endereco", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Ultralinks.Domain.Models.Transacao", b =>
                {
                    b.HasOne("Ultralinks.Domain.Models.Usuario", "UsuarioDestino")
                        .WithMany("TransacoesDestino")
                        .HasForeignKey("UsuarioIdDestino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ultralinks.Domain.Models.Usuario", "UsuarioOrigem")
                        .WithMany("TransacoesOrigem")
                        .HasForeignKey("UsuarioIdOrigem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioDestino");

                    b.Navigation("UsuarioOrigem");
                });

            modelBuilder.Entity("Ultralinks.Domain.Models.Usuario", b =>
                {
                    b.Navigation("EnderecoCobranca")
                        .IsRequired();

                    b.Navigation("TransacoesDestino");

                    b.Navigation("TransacoesOrigem");
                });
#pragma warning restore 612, 618
        }
    }
}
